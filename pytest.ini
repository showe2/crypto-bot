[tool:pytest]
# ==============================================
# PYTEST CONFIGURATION
# Solana Token Analysis AI System
# ==============================================

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --maxfail=3
    --disable-warnings

# Async support
asyncio_mode = auto

# Test markers (used in tests with @pytest.mark.marker_name)
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, with external dependencies)
    services: API/Service tests (external services)
    performance: Performance and load tests
    slow: Slow tests (can be skipped with -m "not slow")
    real_api: Tests that use real API calls (may cost money)
    redis: Tests that require Redis connection
    chromadb: Tests that require ChromaDB connection
    api: Tests that test API endpoints
    models: Tests for Pydantic models
    config: Tests for configuration
    validation: Tests for validation logic
    cache: Tests for caching functionality
    health: Tests for health checks and monitoring
    dependencies: Tests for dependency injection
    mock: Tests that use extensive mocking
    external: Tests requiring external services
    helius: Tests specific to Helius API
    birdeye: Tests specific to Birdeye API
    solscan: Tests specific to Solscan API

# Minimum pytest version
minversion = 6.0

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:chromadb.*
    ignore::UserWarning:sentence_transformers.*
    ignore::FutureWarning:transformers.*
    ignore::RuntimeWarning

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeout (requires pytest-timeout)
timeout = 300
timeout_method = thread

# Test discovery patterns
norecursedirs = .git .tox venv .venv __pycache__ node_modules

# Console output
console_output_style = progress

# Show local variables in tracebacks
showlocals = true

# Capture method for stdout/stderr
capture = sys